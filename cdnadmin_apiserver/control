#!/bin/bash

function show() {
    flag="$1"
    shift
    content="$*"
    if [ ${flag} == "error" ];then
        echo -e "\033[1;31m${content}\033[0m"
    elif [ ${flag} == "success" ];then
        echo -e "\033[1;32m${content}\033[0m"
    elif [ ${flag} == "tips" ];then
        echo -e "\033[1;33m${content}\033[0m"
    elif [ ${flag} == "view" ];then
        echo -e "\033[1;35m${content}\033[0m"
    else
        echo -e "\033[1;31m${content}\033[0m"
    fi
}

function check_pid() {
    if [ -f ${pidfile} ];then
        pid=$(cat ${pidfile})
        if [ -n ${pid} ]; then
            running=$(ps -p ${pid}|grep -v "PID TTY" |wc -l)
            return $running
        fi
    fi
    return 0
}

function start() {
    check_pid
    running=$?
    if [ ${running} -gt 0 ]; then
        show "tips" "${app} now is running already, pid=$(cat ${pidfile})"
        return 1
    fi

    nohup ./${app} -c ${c} &> ${logfile} &
    echo $! > ${pidfile}
    show "success" "${app} started..., pid=$!"
}

function stop() {
    check_pid
    running=$?
    if [ ${running} -gt 0 ]; then
        pid=$(cat ${pidfile})
        if ps -ef | grep "${app} -c ${c}" | grep -q ${pid}; then
            kill -9 ${pid} 2>/dev/null
            show "success" "${app} stoped..."
        else
            show "tips" "${app} now is stoped already"
        fi
        rm -f ${pidfile}
    else
        show "error" "${pidfile} not found"
    fi
}

function restart() {
    stop
    sleep 1
    start
}

function status() {
    check_pid
    running=$?
    if [ ${running} -gt 0 ]; then
        show "success" "${app} now is running already, pid=$(cat ${pidfile})"
    else
        show "success" "${app} now is stoped already"
    fi
}

function tailf() {
    tail -f ${logfile}
}

function build() {
    go build
    if [ $? -ne 0 ]; then
        exit $?
    fi
    #mv $module $app
    ./${app} -v
}

function pack() {
    build
    version=$(./${app} -v)
    tar zcvf ${app}-${version}.tar.gz control cfg.json ${app}
}

function packbin() {
    build
    version=$(./${app} -v)
    tar zcvf ${app}-bin-${version}.tar.gz ${app}
}

function help() {
    show "tips" "$0 pid|reload|build|pack|packbin|start|stop|restart|status|tail"
}

function pid() {
    if [ -s ${pidfile} ]; then
        show "view" "pid=$(cat ${pidfile})"
    else
        show "error" "${pidfile} not found"
    fi
}

function reload() {
    build
    restart
    tailf
}

function main() {
    WORKSPACE=$(cd $(dirname $0)/; pwd)
    cd ${WORKSPACE}

    if [ ! -s logs ]; then
        mkdir -p logs
    fi

    module=cdnadmin_apiserver
    app=${module}
    conf=cfg.json
    localconf=cfg.local.json
    pidfile=logs/app.pid
    logfile=logs/app.log

    c=${conf}
    if [ -f ${localconf} ];then
        c=${localconf}
    fi

    if [ "$1" == "" ]; then
        help
    elif [ "$1" == "stop" ];then
        stop
    elif [ "$1" == "start" ];then
        start
    elif [ "$1" == "restart" ];then
        restart
    elif [ "$1" == "status" ];then
        status
    elif [ "$1" == "tail" ];then
        tailf
    elif [ "$1" == "build" ];then
        build
    elif [ "$1" == "pack" ];then
        pack
    elif [ "$1" == "packbin" ];then
        packbin
    elif [ "$1" == "pid" ];then
        pid
    elif [ "$1" == "reload" ];then
        reload
    else
        help
    fi
}

main $*
